报错一：

Python 3.7.4 (tags/v3.7.4:e09359112e, Jul  8 2019, 20:34:20) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> 
================ RESTART: D:\python_wordcloud\3_wordcloud.py ================
Traceback (most recent call last):
  File "D:\python_wordcloud\3_wordcloud.py", line 13, in <module>
    w.generate(txt)
  File "D:\pycharm\lib\site-packages\wordcloud\wordcloud.py", line 605, in generate
    return self.generate_from_text(text)
  File "D:\pycharm\lib\site-packages\wordcloud\wordcloud.py", line 587, in generate_from_text
    self.generate_from_frequencies(words)
  File "D:\pycharm\lib\site-packages\wordcloud\wordcloud.py", line 426, in generate_from_frequencies
    max_font_size=self.height)
  File "D:\pycharm\lib\site-packages\wordcloud\wordcloud.py", line 473, in generate_from_frequencies
    font = ImageFont.truetype(self.font_path, font_size)
  File "D:\pycharm\lib\site-packages\PIL\ImageFont.py", line 546, in truetype
    return freetype(font)
  File "D:\pycharm\lib\site-packages\PIL\ImageFont.py", line 543, in freetype
    return FreeTypeFont(font, size, index, encoding, layout_engine)
  File "D:\pycharm\lib\site-packages\PIL\ImageFont.py", line 161, in __init__
    font, size, index, encoding, layout_engine=layout_engine
OSError: cannot open resource
>>> 


解决方案字体路径修改为
font_path='c:\\windows\\Fonts\\simhei.ttf'


文件打开以后用这种方式

with open('致橡树.txt','r',encoding='utf-8') as f:
    txt = f.read()



章节代码特点

2、 不分词
3、分词
6、根据图片图形生成
9、图形外轮廓线

视频学习资料： 同济自豪兄


scale = 15， # 像素清晰度，数量越大，越清晰
stopwords = {'孔明','曹操'}   # 不分析的词，由此注明

contour_width=1,
contour_color='steelblue'            # 轮廓线宽度，颜色

# 调用wordcloud库中的ImageColorGenerator()函数，提取模板图片各部分的颜色
image_colors = ImageColorGenerator(mk)

# 显示原生词云图、按模板图片颜色的词云图和模板图片，按左、中、右显示
fig, axes = plt.subplots(1, 3)
# 最左边的图片显示原生词云图
axes[0].imshow(wc)
# 中间的图片显示按模板图片颜色生成的词云图，采用双线性插值的方法显示颜色
axes[1].imshow(wc.recolor(color_func=image_colors), interpolation="bilinear")
# 右边的图片显示模板图片
axes[2].imshow(mk, cmap=plt.cm.gray)
for ax in axes:
    ax.set_axis_off()
plt.show()

# 给词云对象按模板图片的颜色重新上色
wc_color = wc.recolor(color_func=image_colors)
# 将词云图片导出到当前文件夹
wc_color.to_file('output10-alice.png')


0. 常用参数：
- font_path：指明要用的字体的路径，

- width：默认值400。设定词云画布的宽度，

- height：默认值200。画布高度，

- mask：默认无。用来设定词云的形状，

- min_font_size：默认值4，整数类型。设定最小的词的尺寸/大小，

- max_font_size：默认无，整数型。设定最大词的大小，

- max_words：默认值200。设定词云最多显示的词的个数，

- background_color：默认值为黑色。设定词云画布底色，

- Scale：默认值1。值越大，图像密度越大越清晰：

- color_func：默认无，可选参数一个“callable”。collable可以返回每个词的PIL色彩值，包括大小/位置/方向/字体格式/随机起始位置。

1. 不常用参数
- stop_word：默认无。设定取词程序在某个词处停止，

- prefer_horizontal：默认值0.90，浮点数类型。表示在水平如果不合适，就旋转为垂直方向，水平放置的词数占0.9？，

- font_step：默认值1，整数型。对生成的词抽样，设定抽取的两个词之间略过的词的个数，

- mode：默认值“RGB”，字符串型。或者使用“RGBA”产生透明背景，

- relative_scaling：默认值0.5，浮点型。设定按词频倒序排列，上一个词相对下一位词的大小倍数。有如下取值：“0”表示大小标准只参考频率排名，“1”如果词频是2倍，大小也是2倍，

- regexp：默认无，字符串类型。至于作用，笔者还没搞懂，

- collocations：默认为True，可选项为“bool”。决定词云是否可以包含两个词的搭配，

- colormap: srting or matplotlib colormap, default='viridis'：如果“color_func”指定，则失效；否则由matplotlib的色彩库为每个词随机定颜色，

- normalize_plurals: bool, default=True：默认为True。默认True决定将词尾后缀‘s’删除。

